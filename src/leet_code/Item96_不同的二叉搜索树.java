package leet_code;

public class Item96_不同的二叉搜索树 {

  /*
    [1, 2, 3, 4, 5 ,6 ,7]

    输入: 3
    输出: 5
    解释:
    给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

      1        3     3      2      1
      \       /     /      / \      \
       3     2     1      1   3      2
      /     /       \                 \
     2     1         2                 3

     卡特兰数的n: 0 , 1 , 2 , 3 , 4  , 5  , 6   , 7   , 8    , 9    , 10    , 11    , 12     , 13     , 14
       卡特兰数: 1 , 1 , 2 , 5 , 14 , 42 , 132 , 429 , 1430 , 4862 , 16796 , 58786 , 208012 , 742900 , 2674440

     卡特兰数递归方程: C(n) = (2(2n-1)/(n+1))*C(n-1)
   */
  public int numTrees(int n) {
    int[] G = new int[n + 1];
    G[0] = 1;
    G[1] = 1;

    for (int i = 2; i <= n; ++i) {
      for (int j = 1; j <= i; ++j) {
        G[i] += G[j - 1] * G[i - j];
      }
    }
    return G[n];
  }

}
